package sources;


import com.toedter.calendar.JDateChooser;
import java.lang.reflect.Field;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sijitend
 */
public class AddNewExpense extends javax.swing.JFrame {


    static String Expense_Date;
    static String Expense_NAme;
    static String Expense_Type;
    static String Expense_Amount;
    static String Expense_Involved_Person;
    static String Expense_Description;
    public static MyMain iClass;
    private String Date_of_Expense;
    private String Amount;
    private String Invlolved_Person;
 /**
     * Creates new form NewJFrame3
     */
    public AddNewExpense() {

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_exp_type = new javax.swing.JLabel();
        jTextField_exp_name = new javax.swing.JTextField();
        jLabel_amount = new javax.swing.JLabel();
        jTextField_exp_amount = new javax.swing.JTextField();
        jLabel_involved_person = new javax.swing.JLabel();
        jTextField_involved_person = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jDatechoose_exp_Date = new com.toedter.calendar.JDateChooser();
        jXLabel_exp_date = new org.jdesktop.swingx.JXLabel();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jLabel_exp_name = new javax.swing.JLabel();
        jTextField_exp_type = new javax.swing.JTextField();
        jLabel_exp_name1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setAlwaysOnTop(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                myclose(evt);
            }
        });

        jLabel_exp_type.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_exp_type.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_exp_type.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\exp_type.png")); // NOI18N
        jLabel_exp_type.setText("Expense Type :");
        jLabel_exp_type.setOpaque(true);

        jTextField_exp_name.getDocument().addDocumentListener(new DocumentListener()
            {
                @Override
                public void removeUpdate(DocumentEvent e)
                {

                }

                @Override
                public void insertUpdate(DocumentEvent e)
                {
                    validateInput(jTextField_exp_name.getText(),"[a-zA-Z]+");
                }

                @Override
                public void changedUpdate(DocumentEvent e) {}
                // Not needed for plain-text fields
            });

            jLabel_amount.setBackground(new java.awt.Color(255, 255, 255));
            jLabel_amount.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
            jLabel_amount.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\rupee.png")); // NOI18N
            jLabel_amount.setText("Amount :");
            jLabel_amount.setOpaque(true);

            jTextField_exp_amount.getDocument().addDocumentListener(new DocumentListener()
                {
                    @Override
                    public void removeUpdate(DocumentEvent e)
                    {

                    }

                    @Override
                    public void insertUpdate(DocumentEvent e)
                    {
                        validateInput(jTextField_exp_amount.getText(),"\\d+");
                    }

                    @Override
                    public void changedUpdate(DocumentEvent e) {}
                    // Not needed for plain-text fields
                });
                jTextField_exp_amount.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusLost(java.awt.event.FocusEvent evt) {
                        jTextField_exp_amountFocusLost(evt);
                    }
                });

                jLabel_involved_person.setBackground(new java.awt.Color(255, 255, 255));
                jLabel_involved_person.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel_involved_person.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\person.png")); // NOI18N
                jLabel_involved_person.setText("Invlolved Person :");
                jLabel_involved_person.setOpaque(true);

                jTextField_involved_person.getDocument().addDocumentListener(new DocumentListener()
                    {
                        @Override
                        public void removeUpdate(DocumentEvent e)
                        {

                        }

                        @Override
                        public void insertUpdate(DocumentEvent e)
                        {
                            validateInput(jTextField_involved_person.getText(),"[a-zA-Z]+");
                        }

                        @Override
                        public void changedUpdate(DocumentEvent e) {}
                        // Not needed for plain-text fields
                    });

                    jButton1.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\ook.png")); // NOI18N
                    jButton1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            jButton1ActionPerformed(evt);
                        }
                    });

                    jDatechoose_exp_Date.setDateFormatString("yyyy.MM.dd");
                    jDatechoose_exp_Date.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
                        public void propertyChange(java.beans.PropertyChangeEvent evt) {
                            jDatechoose_exp_DatePropertyChange(evt);
                        }
                    });

                    jXLabel_exp_date.setBackground(new java.awt.Color(255, 255, 255));
                    jXLabel_exp_date.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\date.png")); // NOI18N
                    jXLabel_exp_date.setText("Expense Date :");
                    jXLabel_exp_date.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jXLabel_exp_date.setOpaque(true);

                    jXLabel2.setBackground(new java.awt.Color(255, 255, 255));
                    jXLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    jXLabel2.setForeground(new java.awt.Color(0, 0, 255));
                    jXLabel2.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\epp.png")); // NOI18N
                    jXLabel2.setText("       Expense Details");
                    jXLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                    jXLabel2.setOpaque(true);

                    jLabel_exp_name.setBackground(new java.awt.Color(255, 255, 255));
                    jLabel_exp_name.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel_exp_name.setText("Expense Name :");
                    jLabel_exp_name.setOpaque(true);

                    jTextField_exp_type.getDocument().addDocumentListener(new DocumentListener()
                        {
                            @Override
                            public void removeUpdate(DocumentEvent e)
                            {

                            }

                            @Override
                            public void insertUpdate(DocumentEvent e)
                            {
                                validateInput(jTextField_exp_type.getText(),"[a-zA-Z]+");
                            }

                            @Override
                            public void changedUpdate(DocumentEvent e) {}
                            // Not needed for plain-text fields
                        });

                        jLabel_exp_name1.setBackground(new java.awt.Color(255, 255, 255));
                        jLabel_exp_name1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                        jLabel_exp_name1.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\desc.png")); // NOI18N
                        jLabel_exp_name1.setText("Expense Description :");
                        jLabel_exp_name1.setOpaque(true);

                        jTextArea1.setColumns(20);
                        jTextArea1.setRows(5);
                        jScrollPane1.setViewportView(jTextArea1);

                        jButton3.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\ccccl.png")); // NOI18N
                        jButton3.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jButton3ActionPerformed(evt);
                            }
                        });

                        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                        getContentPane().setLayout(layout);
                        layout.setHorizontalGroup(
                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(40, 40, 40)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel_amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel_exp_type, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel_exp_name, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel_involved_person, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField_exp_type, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                            .addComponent(jTextField_exp_name)
                                            .addComponent(jTextField_exp_amount)
                                            .addComponent(jTextField_involved_person)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel_exp_name1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jXLabel_exp_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(48, 48, 48)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jDatechoose_exp_Date, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addContainerGap(39, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        );
                        layout.setVerticalGroup(
                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(64, 64, 64)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jTextField_exp_name)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField_exp_type, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel_exp_name, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLabel_exp_type)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(jLabel_amount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jTextField_exp_amount))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jLabel_involved_person)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(jTextField_involved_person)
                                                .addGap(3, 3, 3)))
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jXLabel_exp_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jDatechoose_exp_Date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel_exp_name1)
                                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(90, 90, 90)
                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        );

                        pack();
                    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        Expense_Type = jTextField_exp_type.getText();
        Expense_NAme = jTextField_exp_name.getText();
        Expense_Amount = jTextField_exp_amount.getText();
        Expense_Involved_Person = jTextField_involved_person.getText();
        Expense_Description = jTextArea1.getText();
        // = jTextField4.getText();
         String ret="No Data";
         String[] sa= new String[6];
       
        if(  !Expense_Type.isEmpty() && !Expense_NAme.isEmpty() &&  !Expense_Amount.isEmpty()  &&  !Expense_Involved_Person.isEmpty()  && !Expense_Description.isEmpty())
        {
             ret = SetVal();
             if(ret.equalsIgnoreCase("Success"))
             {
                    System.out.println(ret);
                  JOptionPane.showMessageDialog(this.getComponent(0), ret);
                  DefaultTableModel Dt = (DefaultTableModel)MyMain.jXTable7.getModel();
                  sa[0] = Expense_NAme;
                  sa[1] = Expense_Type;
                  sa[2] = Expense_Date;
                  sa[3] = Expense_Involved_Person;
                  sa[4] = Expense_Amount;
                  sa[5] = Expense_Description;
                  Dt.addRow(sa);
                  iClass.setVisible(true);
                  this.dispose();
             }
             else
                 JOptionPane.showMessageDialog(this.getComponent(0), "Database Error","" ,JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            JOptionPane.showMessageDialog(this.getComponent(0), ret,"No Data", JOptionPane.ERROR_MESSAGE);
        }
      
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jDatechoose_exp_DatePropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDatechoose_exp_DatePropertyChange
        // TODO add your handling code here:

        JDateChooser dateChooser = new JDateChooser();

        if ("date".equals(evt.getPropertyName())) {
            SimpleDateFormat dformat = new SimpleDateFormat("dd-MMM-yyyy");
            Expense_Date = dformat.format(((Date) evt.getNewValue()));
            System.out.println(evt.getPropertyName() + ": " + Expense_Date);
        }
    }//GEN-LAST:event_jDatechoose_exp_DatePropertyChange

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        iClass.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void myclose(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_myclose
        // TODO add your handling code here:
         iClass.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_myclose

    private void jTextField_exp_amountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_exp_amountFocusLost
         if(!jTextField_exp_amount.getText().isEmpty() &&  !jTextField_exp_amount.getText().matches("^\\d+$"))
        {
            JOptionPane.showMessageDialog(this, "Incorrect Mobile Number", "Invalid Mobile", JOptionPane.WARNING_MESSAGE);
            jTextField_exp_amount.setText("");
            jTextField_exp_amount.requestFocusInWindow();
            
        }
    }//GEN-LAST:event_jTextField_exp_amountFocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDatechoose_exp_Date;
    private javax.swing.JLabel jLabel_amount;
    private javax.swing.JLabel jLabel_exp_name;
    private javax.swing.JLabel jLabel_exp_name1;
    private javax.swing.JLabel jLabel_exp_type;
    private javax.swing.JLabel jLabel_involved_person;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField_exp_amount;
    private javax.swing.JTextField jTextField_exp_name;
    private javax.swing.JTextField jTextField_exp_type;
    private javax.swing.JTextField jTextField_involved_person;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    private org.jdesktop.swingx.JXLabel jXLabel_exp_date;
    // End of variables declaration//GEN-END:variables
public String toMyString() {
        StringBuilder result = new StringBuilder();
        String newLine = System.getProperty("line.separator");

        result.append(this.getClass().getName());
        result.append(" Object {");
        result.append(newLine);

        //determine fields declared in this class only (no fields of superclass)
        Field[] fields = this.getClass().getDeclaredFields();

        //print field names paired with their values
        for (Field field : fields) {
            result.append("  ");
            try {
                result.append(field.getName());
                result.append(": ");
                //requires access to private field:
                result.append(field.get(this));
            } catch (IllegalAccessException ex) {
                System.out.println(ex);
            }
            result.append(newLine);
        }
        result.append("}");

        return result.toString();
    }

    public static String SetVal() {

        try {
            Class.forName("com.mysql.jdbc.Driver");

            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://127.0.0.1:3306/work", "root", "root");

            Statement stmt = con.createStatement();
             String sDoe = "STR_TO_DATE("+"'"+Expense_Date+"'"+",\'%d-%M-%Y\')";
            String tmp = "INSERT INTO expense (`expense_Name`, `expense_Type`, `Amount`, `Involved_Person`, `expense_Date`,`Description`) "
                    + "VALUES (" + "'" + Expense_NAme + "'" + "," + "'" + Expense_Type + "'" + "," + "'" + Expense_Amount + "'" + "," + "'" + Expense_Involved_Person + "'" + ", " + sDoe + " ," 
                    + "'" + Expense_Description + "'"+" );";

            System.out.println("==>" + tmp);
                String ret="Failed";
            if( 0< stmt.executeUpdate(tmp))
            {
                    ret = "Success";
            }
            
            con.close();
            return  ret;

        } catch (Exception e) {
            System.out.println(e);
            return "Failed";
        }
    }

      private  void validateInput(String text, String pattern)
  {
//    Pattern r = Pattern.compile(pattern);
//    Matcher m = r.matcher(text);
//    if (!m.matches())
//    {
//      JOptionPane.showMessageDialog(AddNewExpense.this,"Error", "Validation", JOptionPane.WARNING_MESSAGE);
//    }
    
  }
    
}
