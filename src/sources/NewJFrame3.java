package sources;


import com.toedter.calendar.JDateChooser;
import java.lang.reflect.Field;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author sijitend
 */
public class NewJFrame3 extends javax.swing.JFrame {

    static String UserID;

    public static String getFirst_Name() {
        return First_Name;
    }

    public static void setFirst_Name(String First_Name) {
        NewJFrame3.First_Name = First_Name;
    }

    public static String getLast_Name() {
        return Last_Name;
    }

    public static void setLast_Name(String Last_Name) {
        NewJFrame3.Last_Name = Last_Name;
    }

    public static String getFatherName() {
        return FatherName;
    }

    public static void setFatherName(String FatherName) {
        NewJFrame3.FatherName = FatherName;
    }

    public static String getMobile() {
        return Mobile;
    }

    public static void setMobile(String Mobile) {
        NewJFrame3.Mobile = Mobile;
    }

    public static String getVill() {
        return Vill;
    }

    public static void setVill(String Vill) {
        NewJFrame3.Vill = Vill;
    }

    public static String getTown() {
        return Town;
    }

    public static void setTown(String Town) {
        NewJFrame3.Town = Town;
    }

    public static String getDist() {
        return Dist;
    }

    public static void setDist(String Dist) {
        NewJFrame3.Dist = Dist;
    }

    public static String getLandmark() {
        return Landmark;
    }

    public static void setLandmark(String Landmark) {
        NewJFrame3.Landmark = Landmark;
    }

    public static int getPINCODE() {
        return PINCODE;
    }

    public static void setPINCODE(int PINCODE) {
        NewJFrame3.PINCODE = PINCODE;
    }

    public static String getAddress() {
        return Address;
    }

    public static void setAddress(String Address) {
        NewJFrame3.Address = Address;
    }

    public static String getCity() {
        return City;
    }

    public static void setCity(String City) {
        NewJFrame3.City = City;
    }

    public static String getCountry() {
        return Country;
    }

    public static void setCountry(String Country) {
        NewJFrame3.Country = Country;
    }

    public String getUserID() {
        return UserID;
    }

    public void setUserID(String UserID) {
        this.UserID = UserID;
    }

    static String First_Name;

    static String Last_Name;
    static String FatherName;
    static String Mobile;
    static String Vill;
    static String Town;
    static String Dist;
    static String Landmark;
    static int PINCODE;
    static String Address;
    static String City;
    static String Country;
    static String Birth_Date;

    /**
     * Creates new form NewJFrame3
     */
    public NewJFrame3() {

        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextField_cust_mob = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField9 = new javax.swing.JTextField();
        jTextField10 = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jTextField13 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jTextField8 = new javax.swing.JTextField();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fnmae~1.png"))); // NOI18N
        jLabel1.setText("First Name :");
        jLabel1.setOpaque(true);

        jTextField1.getDocument().addDocumentListener(new DocumentListener()
            {
                @Override
                public void removeUpdate(DocumentEvent e)
                {

                }

                @Override
                public void insertUpdate(DocumentEvent e)
                {
                    validateInput(jTextField1.getText(),"[a-zA-Z]+");
                }

                @Override
                public void changedUpdate(DocumentEvent e) {}
                // Not needed for plain-text fields
            });

            jLabel2.setBackground(new java.awt.Color(255, 255, 255));
            jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
            jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/lname~1.png"))); // NOI18N
            jLabel2.setText("Last Name :");
            jLabel2.setOpaque(true);

            jTextField2.getDocument().addDocumentListener(new DocumentListener()
                {
                    @Override
                    public void removeUpdate(DocumentEvent e)
                    {

                    }

                    @Override
                    public void insertUpdate(DocumentEvent e)
                    {
                        validateInput(jTextField2.getText(),"[a-zA-Z]+");
                    }

                    @Override
                    public void changedUpdate(DocumentEvent e) {}
                    // Not needed for plain-text fields
                });

                jLabel3.setBackground(new java.awt.Color(255, 255, 255));
                jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/fathe~1.png"))); // NOI18N
                jLabel3.setText("Father's Name :");
                jLabel3.setOpaque(true);

                jTextField3.getDocument().addDocumentListener(new DocumentListener()
                    {
                        @Override
                        public void removeUpdate(DocumentEvent e)
                        {

                        }

                        @Override
                        public void insertUpdate(DocumentEvent e)
                        {
                            validateInput(jTextField3.getText(),"^[a-zA-Z]+\\s+[a-zA-Z]+$");
                        }

                        @Override
                        public void changedUpdate(DocumentEvent e) {}
                        // Not needed for plain-text fields
                    });

                    jLabel4.setBackground(new java.awt.Color(255, 255, 255));
                    jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/mob~1.png"))); // NOI18N
                    jLabel4.setText("Mobile :");
                    jLabel4.setOpaque(true);

                    jTextField_cust_mob.getDocument().addDocumentListener(new DocumentListener()
                        {
                            @Override
                            public void removeUpdate(DocumentEvent e)
                            {

                            }

                            @Override
                            public void insertUpdate(DocumentEvent e)
                            {
                                validateInput(jTextField_cust_mob.getText(),"\\d+");
                            }

                            @Override
                            public void changedUpdate(DocumentEvent e) {}
                            // Not needed for plain-text fields
                        });

                        jLabel5.setBackground(new java.awt.Color(255, 255, 255));
                        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/pincode.png"))); // NOI18N
                        jLabel5.setText("PINCODE :");
                        jLabel5.setOpaque(true);

                        jTextField5.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                jTextField5ActionPerformed(evt);
                            }
                        });
                        jTextField5.getDocument().addDocumentListener(new DocumentListener()
                            {
                                @Override
                                public void removeUpdate(DocumentEvent e)
                                {

                                }

                                @Override
                                public void insertUpdate(DocumentEvent e)
                                {
                                    validateInput(jTextField5.getText(),"\\d+");
                                }

                                @Override
                                public void changedUpdate(DocumentEvent e) {}
                                // Not needed for plain-text fields
                            });

                            jLabel6.setBackground(new java.awt.Color(255, 255, 255));
                            jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                            jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/town.png"))); // NOI18N
                            jLabel6.setText("Town :");
                            jLabel6.setOpaque(true);

                            jTextField6.getDocument().addDocumentListener(new DocumentListener()
                                {
                                    @Override
                                    public void removeUpdate(DocumentEvent e)
                                    {

                                    }

                                    @Override
                                    public void insertUpdate(DocumentEvent e)
                                    {
                                        validateInput(jTextField6.getText(),"[a-zA-Z]+");
                                    }

                                    @Override
                                    public void changedUpdate(DocumentEvent e) {}
                                    // Not needed for plain-text fields
                                });

                                jLabel7.setBackground(new java.awt.Color(255, 255, 255));
                                jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                                jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/disst.png"))); // NOI18N
                                jLabel7.setText("District :");
                                jLabel7.setOpaque(true);

                                jTextField7.addActionListener(new java.awt.event.ActionListener() {
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        jTextField7ActionPerformed(evt);
                                    }
                                });
                                jTextField7.getDocument().addDocumentListener(new DocumentListener()
                                    {
                                        @Override
                                        public void removeUpdate(DocumentEvent e)
                                        {

                                        }

                                        @Override
                                        public void insertUpdate(DocumentEvent e)
                                        {
                                            validateInput(jTextField7.getText(),"[a-zA-Z]+");
                                        }

                                        @Override
                                        public void changedUpdate(DocumentEvent e) {}
                                        // Not needed for plain-text fields
                                    });

                                    jLabel8.setBackground(new java.awt.Color(255, 255, 255));
                                    jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                                    jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/city~1.png"))); // NOI18N
                                    jLabel8.setText("City :");
                                    jLabel8.setOpaque(true);

                                    jLabel9.setBackground(new java.awt.Color(255, 255, 255));
                                    jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                                    jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/vilg.png"))); // NOI18N
                                    jLabel9.setText("Address :");
                                    jLabel9.setOpaque(true);

                                    jTextField9.getDocument().addDocumentListener(new DocumentListener()
                                        {
                                            @Override
                                            public void removeUpdate(DocumentEvent e)
                                            {

                                            }

                                            @Override
                                            public void insertUpdate(DocumentEvent e)
                                            {
                                                validateInput(jTextField9.getText(),"^[a-zA-Z]+\\s+[a-zA-Z].*$");
                                            }

                                            @Override
                                            public void changedUpdate(DocumentEvent e) {}
                                            // Not needed for plain-text fields
                                        });

                                        jTextField10.addActionListener(new java.awt.event.ActionListener() {
                                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                jTextField10ActionPerformed(evt);
                                            }
                                        });
                                        jTextField10.getDocument().addDocumentListener(new DocumentListener()
                                            {
                                                @Override
                                                public void removeUpdate(DocumentEvent e)
                                                {

                                                }

                                                @Override
                                                public void insertUpdate(DocumentEvent e)
                                                {
                                                    validateInput(jTextField10.getText(),"^[a-zA-Z]+\\s+[a-zA-Z].*$");
                                                }

                                                @Override
                                                public void changedUpdate(DocumentEvent e) {}
                                                // Not needed for plain-text fields
                                            });

                                            jLabel11.setBackground(new java.awt.Color(255, 255, 255));
                                            jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                                            jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/land~1.png"))); // NOI18N
                                            jLabel11.setText("Landmark :");
                                            jLabel11.setOpaque(true);

                                            jLabel12.setBackground(new java.awt.Color(255, 255, 255));
                                            jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                                            jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/dob~1.png"))); // NOI18N
                                            jLabel12.setText("Date Of Birth");
                                            jLabel12.setOpaque(true);

                                            jLabel13.setBackground(new java.awt.Color(255, 255, 255));
                                            jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                                            jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/villeg.png"))); // NOI18N
                                            jLabel13.setText("Village :");
                                            jLabel13.setOpaque(true);

                                            jTextField13.addActionListener(new java.awt.event.ActionListener() {
                                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                    jTextField13ActionPerformed(evt);
                                                }
                                            });
                                            jTextField13.getDocument().addDocumentListener(new DocumentListener()
                                                {
                                                    @Override
                                                    public void removeUpdate(DocumentEvent e)
                                                    {

                                                    }

                                                    @Override
                                                    public void insertUpdate(DocumentEvent e)
                                                    {
                                                        validateInput(jTextField13.getText(),"^[a-zA-Z]+\\s+[a-zA-Z]+.*$");
                                                    }

                                                    @Override
                                                    public void changedUpdate(DocumentEvent e) {}
                                                    // Not needed for plain-text fields
                                                });

                                                jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ook.png"))); // NOI18N
                                                jButton1.addActionListener(new java.awt.event.ActionListener() {
                                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                                        jButton1ActionPerformed(evt);
                                                    }
                                                });

                                                jDateChooser1.setDateFormatString("yyyy.MM.dd");
                                                jDateChooser1.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
                                                    public void propertyChange(java.beans.PropertyChangeEvent evt) {
                                                        jDateChooser1PropertyChange(evt);
                                                    }
                                                });

                                                jTextField8.getDocument().addDocumentListener(new DocumentListener()
                                                    {
                                                        @Override
                                                        public void removeUpdate(DocumentEvent e)
                                                        {

                                                        }

                                                        @Override
                                                        public void insertUpdate(DocumentEvent e)
                                                        {
                                                            validateInput(jTextField8.getText(),"[a-zA-Z]+");
                                                        }

                                                        @Override
                                                        public void changedUpdate(DocumentEvent e) {}
                                                        // Not needed for plain-text fields
                                                    });

                                                    jXLabel2.setBackground(new java.awt.Color(255, 255, 255));
                                                    jXLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                                                    jXLabel2.setForeground(new java.awt.Color(0, 0, 255));
                                                    jXLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/addcus.png"))); // NOI18N
                                                    jXLabel2.setText("      Customer Details");
                                                    jXLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                                                    jXLabel2.setOpaque(true);

                                                    jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ccccl.png"))); // NOI18N

                                                    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                                                    getContentPane().setLayout(layout);
                                                    layout.setHorizontalGroup(
                                                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                                    .addGap(41, 41, 41)
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                                        .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(jTextField1)
                                                                        .addComponent(jTextField2)
                                                                        .addComponent(jTextField3)
                                                                        .addComponent(jTextField_cust_mob)
                                                                        .addComponent(jTextField13)
                                                                        .addComponent(jTextField5)
                                                                        .addComponent(jTextField6)
                                                                        .addComponent(jTextField7)
                                                                        .addComponent(jTextField8)
                                                                        .addComponent(jTextField9)
                                                                        .addComponent(jTextField10)
                                                                        .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)))
                                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addGap(80, 80, 80)
                                                                        .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                                    .addGroup(layout.createSequentialGroup()
                                                                        .addGap(93, 93, 93)
                                                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                        .addGap(41, 41, 41)
                                                                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                                            .addContainerGap(111, Short.MAX_VALUE))
                                                    );
                                                    layout.setVerticalGroup(
                                                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                            .addGap(21, 21, 21)
                                                            .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addGap(26, 26, 26)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel1))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel2)
                                                                .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel3))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jLabel4)
                                                                .addComponent(jTextField_cust_mob, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGap(14, 14, 14)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jTextField13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jTextField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel5))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jTextField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel6))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                                .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel7))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel8))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jTextField9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel11))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jTextField10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel9))
                                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jLabel12))
                                                            .addGap(42, 42, 42)
                                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                                .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                            .addGap(50, 50, 50))
                                                    );

                                                    pack();
                                                }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        First_Name = jTextField1.getText();

        Last_Name = jTextField2.getText();
        FatherName = jTextField3.getText();
        Mobile = jTextField_cust_mob.getText();
        Town = jTextField6.getText();
        Dist = jTextField7.getText();
        City = jTextField8.getText();
        Vill = jTextField13.getText();
        PINCODE = Integer.parseInt(jTextField5.getText());
        Address = jTextField10.getText();
        Landmark = jTextField9.getText();   
        UserID = First_Name + Mobile.substring(Mobile.length() - 5, Mobile.length());
        String ret = jitu();
        System.out.println(ret);
        String dsp = "<html><b><font color= #0000ff size=10> ~*~Welcome~*~</font></b><br><br><font color= #b22222 size=6> "+First_Name+"  "+Last_Name+"</font></html>";
        ImageIcon icon_userid = new ImageIcon(this.getClass().getResource("/img/success.png"));
        JOptionPane.showMessageDialog(this.getComponent(0), dsp, "Valid UserID", JOptionPane.INFORMATION_MESSAGE,icon_userid);
        JOptionPane.showMessageDialog(this.getComponent(0), ret);
        System.out.println("########"+UserID);
        if(ret != null)
        {
            MyMain.sUserID = UserID;
            MyMain.jLabel_Customer_Active.setFont(new java.awt.Font("Tahoma", 0, 18));
            MyMain.jLabel_Customer_Active.setText("Current Customer : "+UserID);
            MyMain.enable_All();
        }
        //new NewJFrame6(UserID).setVisible(true);
        this.dispose();


    }//GEN-LAST:event_jButton1ActionPerformed

    private void jDateChooser1PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jDateChooser1PropertyChange
        // TODO add your handling code here:

        JDateChooser dateChooser = new JDateChooser();

        if ("date".equals(evt.getPropertyName())) {
            SimpleDateFormat dformat = new SimpleDateFormat("dd-MMM-yyyy");
            Birth_Date = dformat.format(((Date) evt.getNewValue()));
            System.out.println(evt.getPropertyName() + ": " + Birth_Date);
        }
    }//GEN-LAST:event_jDateChooser1PropertyChange

    private void jTextField13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField13ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField13ActionPerformed

    private void jTextField5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField5ActionPerformed

    private void jTextField7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField7ActionPerformed

    private void jTextField10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField10ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField10ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame3.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new NewJFrame3().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField10;
    private javax.swing.JTextField jTextField13;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField jTextField9;
    private javax.swing.JTextField jTextField_cust_mob;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    // End of variables declaration//GEN-END:variables
public String toMyString() {
        StringBuilder result = new StringBuilder();
        String newLine = System.getProperty("line.separator");

        result.append(this.getClass().getName());
        result.append(" Object {");
        result.append(newLine);

        //determine fields declared in this class only (no fields of superclass)
        Field[] fields = this.getClass().getDeclaredFields();

        //print field names paired with their values
        for (Field field : fields) {
            result.append("  ");
            try {
                result.append(field.getName());
                result.append(": ");
                //requires access to private field:
                result.append(field.get(this));
            } catch (IllegalAccessException ex) {
                System.out.println(ex);
            }
            result.append(newLine);
        }
        result.append("}");

        return result.toString();
    }

    public String jitu() {
        UserID = First_Name + Mobile.substring(Mobile.length() - 5, Mobile.length());

        Customer c = new Customer();
        c.setFirst_Name(First_Name);
        c.setLast_Name(Last_Name);
        c.setFatherName(FatherName);
        c.setMobile(Mobile);
        c.setPINCODE(PINCODE);
        c.setVill(Vill);
        c.setTown(Town);
        c.setDist(Dist);
        c.setCity(City);
        c.setAddress(Address);
        c.setLandmark(Landmark);
        c.setBirth_Date(Birth_Date);
        c.setUserID(UserID);

        System.out.println(c.toMyString());

        c.SetVal(c);
        System.out.println("\nHello " + c.getFirst_Name() + "  Your Customer ID : " + c.getUserID() + "\n");
        return UserID;
    }

    public static void SetVal(Customer c) {

        try {
            Class.forName("com.mysql.jdbc.Driver");

            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://127.0.0.1:3306/work", "root", "root");

            Statement stmt = con.createStatement();
            String tmp = "INSERT INTO customer (`First_Name`, `Last_Name`, `FatherName`, `Mobile`, `Vill`, `Town`, "
                    + "`Dist`, `Landmark`, `PINCODE`, `Address`, `City`, `Birth_Date`, `UserID`) "
                    + "VALUES (" + "'" + c.getFirst_Name() + "'" + "," + "'" + c.getLast_Name() + "'" + "," + "'" + c.getFatherName() + "'" + "," + "'" + c.getMobile() + "'" + "," + "'" + c.getVill() + "'" + "," + "'" + c.getTown() + "'" + "," + "'" + c.getDist() + "'" + "," + "'" + c.getLandmark() + "'" + "," + "'" + c.getPINCODE() + "'" + ","
                    + "'" + c.getAddress() + "'" + "," + "'" + c.getCity() + "'" + "," + "'" + c.getBirth_Date() + "'" + "," + "'" + c.getUserID() + "'" + ");";

            System.out.println("==>" + tmp);
            stmt.executeUpdate(tmp);
            con.close();

        } catch (Exception e) {
            System.out.println(e);
        }
    }

         private  void validateInput(String text, String pattern)
  {
//    Pattern r = Pattern.compile(pattern);
//    Matcher m = r.matcher(text);
//    if (!m.matches())
//    {
//      JOptionPane.showMessageDialog(NewJFrame3.this,"Error", "Validation", JOptionPane.WARNING_MESSAGE);
//    }
    
  }
    
}
