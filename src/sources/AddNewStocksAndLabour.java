package sources;



import java.awt.event.ItemEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.Statement;
import java.util.HashMap;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author sijitend
 */
public class AddNewStocksAndLabour extends javax.swing.JFrame {

 public static MyMain iClass;
    private static String Item;
    private static String ex_Text;
    private static String Labour_charge, Stamp;
    /**
     * Creates new form NewJFrame76
     */
    public AddNewStocksAndLabour() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel_Item = new javax.swing.JLabel();
        jTextField_Item = new javax.swing.JTextField();
        jCheckBox_Silver = new javax.swing.JCheckBox();
        jCheckBox_Gold = new javax.swing.JCheckBox();
        jTextField_Labour = new javax.swing.JTextField();
        jLabel_Labour = new javax.swing.JLabel();
        jLabel_Stamp = new javax.swing.JLabel();
        jTextField_Stamp = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jXLabel2 = new org.jdesktop.swingx.JXLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jLabel_Item.setBackground(new java.awt.Color(255, 255, 255));
        jLabel_Item.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel_Item.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\gold.png")); // NOI18N
        jLabel_Item.setText("Item :");
        jLabel_Item.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jLabel_Item.setOpaque(true);

        jTextField_Item.getDocument().addDocumentListener(new DocumentListener()
            {
                @Override
                public void removeUpdate(DocumentEvent e)
                {

                }

                @Override
                public void insertUpdate(DocumentEvent e)
                {
                    validateInput(jTextField_Item.getText(),"\\d+");
                }

                @Override
                public void changedUpdate(DocumentEvent e) {}
                // Not needed for plain-text fields
            });
            jTextField_Item.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusLost(java.awt.event.FocusEvent evt) {
                    jTextField_ItemFocusLost(evt);
                }
            });

            jCheckBox_Silver.setText(" Silver ");
            jCheckBox_Silver.addItemListener(new java.awt.event.ItemListener() {
                public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    jCheckBox_SilverItemStateChanged(evt);
                }
            });

            jCheckBox_Gold.setText(" Gold ");
            jCheckBox_Gold.addItemListener(new java.awt.event.ItemListener() {
                public void itemStateChanged(java.awt.event.ItemEvent evt) {
                    jCheckBox_GoldItemStateChanged(evt);
                }
            });

            jTextField_Item.getDocument().addDocumentListener(new DocumentListener()
                {
                    @Override
                    public void removeUpdate(DocumentEvent e)
                    {

                    }

                    @Override
                    public void insertUpdate(DocumentEvent e)
                    {
                        validateInput(jTextField_Item.getText(),"\\d+");
                    }

                    @Override
                    public void changedUpdate(DocumentEvent e) {}
                    // Not needed for plain-text fields
                });
                jTextField_Labour.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusLost(java.awt.event.FocusEvent evt) {
                        jTextField_LabourFocusLost(evt);
                    }
                });

                jLabel_Labour.setBackground(new java.awt.Color(255, 255, 255));
                jLabel_Labour.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel_Labour.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\rupee.png")); // NOI18N
                jLabel_Labour.setText("Labour Charge :");
                jLabel_Labour.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                jLabel_Labour.setOpaque(true);

                jLabel_Stamp.setBackground(new java.awt.Color(255, 255, 255));
                jLabel_Stamp.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel_Stamp.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\stamp.png")); // NOI18N
                jLabel_Stamp.setText("Stamp :");
                jLabel_Stamp.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                jLabel_Stamp.setOpaque(true);

                jTextField_Item.getDocument().addDocumentListener(new DocumentListener()
                    {
                        @Override
                        public void removeUpdate(DocumentEvent e)
                        {

                        }

                        @Override
                        public void insertUpdate(DocumentEvent e)
                        {
                            validateInput(jTextField_Item.getText(),"\\d+");
                        }

                        @Override
                        public void changedUpdate(DocumentEvent e) {}
                        // Not needed for plain-text fields
                    });

                    jButton1.setBackground(new java.awt.Color(255, 255, 255));
                    jButton1.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\ook.png")); // NOI18N
                    jButton1.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            jButton1ActionPerformed(evt);
                        }
                    });

                    jButton3.setBackground(new java.awt.Color(255, 255, 255));
                    jButton3.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\ccccl.png")); // NOI18N
                    jButton3.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            jButton3ActionPerformed(evt);
                        }
                    });

                    jXLabel2.setBackground(new java.awt.Color(255, 255, 255));
                    jXLabel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
                    jXLabel2.setForeground(new java.awt.Color(0, 0, 255));
                    jXLabel2.setIcon(new javax.swing.ImageIcon("C:\\dist\\img\\dr.png")); // NOI18N
                    jXLabel2.setText("Stocks");
                    jXLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                    jXLabel2.setOpaque(true);

                    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                    getContentPane().setLayout(layout);
                    layout.setHorizontalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(49, 49, 49)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel_Labour, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel_Stamp, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jCheckBox_Gold)
                                        .addComponent(jCheckBox_Silver)))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(117, 117, 117)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(26, 26, 26)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(121, Short.MAX_VALUE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jTextField_Stamp, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField_Item, javax.swing.GroupLayout.DEFAULT_SIZE, 135, Short.MAX_VALUE)
                                            .addComponent(jTextField_Labour)))
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(153, 153, 153))
                    );
                    layout.setVerticalGroup(
                        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jXLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(12, 12, 12)
                            .addComponent(jCheckBox_Gold)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(jCheckBox_Silver)
                            .addGap(7, 7, 7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jLabel_Item)
                                        .addComponent(jTextField_Item, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField_Labour, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel_Labour))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel_Stamp)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jTextField_Stamp)
                                            .addGap(1, 1, 1)))
                                    .addGap(63, 63, 63)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addContainerGap(73, Short.MAX_VALUE))
                    );

                    pack();
                }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Item = jTextField_Item.getText().toUpperCase();
        Item = ex_Text+Item;
        Labour_charge = jTextField_Labour.getText();
        Stamp = jTextField_Stamp.getText().toUpperCase();
        // = jTextField4.getText();
        if(!Stamp.isEmpty() && !Item.isEmpty() && !Labour_charge.isEmpty()) 
        {
        DefaultTableModel Dt = (DefaultTableModel)MyMain.jXTable_Stocks.getModel();
        String[] sa = new String []{String.valueOf(Dt.getRowCount()+1),Item,Labour_charge,Stamp};
        String ret = SetVal();
        System.out.println(ret);
        JOptionPane.showMessageDialog(this.getComponent(0), ret);
        
        MyMain.get_Items_and_Labour();
        Vector productList = new Vector(MyMain.main_Hashmap_for_Item_and_labour.keySet());
        MyMain.jComboBox_Items_List.setModel(new javax.swing.DefaultComboBoxModel(productList));
        System.out.println(productList.toString());
        Dt.addRow(sa);
        iClass.setVisible(true);
        this.dispose();
    }else
        JOptionPane.showMessageDialog(this, "Please Enter Data", "No Data",JOptionPane.WARNING_MESSAGE);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        iClass.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jCheckBox_GoldItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_GoldItemStateChanged
         if (evt.getStateChange() == ItemEvent.SELECTED) {
            jCheckBox_Silver.setEnabled(false);
            ex_Text = "GOLD ";
            
        } else {
            jCheckBox_Silver.setEnabled(true);
            ex_Text = "";
        }
    }//GEN-LAST:event_jCheckBox_GoldItemStateChanged

    private void jCheckBox_SilverItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCheckBox_SilverItemStateChanged
         if (evt.getStateChange() == ItemEvent.SELECTED) {
            jCheckBox_Gold.setEnabled(false);
            ex_Text = "SILVER ";
            
        } else {
            //jXTextField1.setEnabled(true);
            jCheckBox_Gold.setEnabled(true);
            ex_Text = "";
            //jXButton5.setEnabled(true);
        }
    }//GEN-LAST:event_jCheckBox_SilverItemStateChanged

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
        iClass.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_formWindowClosed

    private void jTextField_LabourFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_LabourFocusLost
         if(!jTextField_Labour.getText().isEmpty() && ! jTextField_Labour.getText().matches("^\\d+$"))
        {
            JOptionPane.showMessageDialog(this, "Incorrect value for Labour Charge", "Invalid Data", JOptionPane.WARNING_MESSAGE);
            jTextField_Labour.setText("");
            jTextField_Labour.requestFocusInWindow();
            
        }
    }//GEN-LAST:event_jTextField_LabourFocusLost

    private void jTextField_ItemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextField_ItemFocusLost
        // TODO add your handling code here
          if(!jTextField_Item.getText().isEmpty() &&  !jTextField_Item.getText().matches("^([a-zA-Z]{3,30}\\s*)+$"))
        {
            JOptionPane.showMessageDialog(this, "Incorrect Item Name", "Invalid Name", JOptionPane.WARNING_MESSAGE);
            jTextField_Item.setText("");
            jTextField_Item.requestFocusInWindow();
            
        }
    }//GEN-LAST:event_jTextField_ItemFocusLost

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddNewStocksAndLabour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddNewStocksAndLabour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddNewStocksAndLabour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddNewStocksAndLabour.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddNewStocksAndLabour().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBox jCheckBox_Gold;
    private javax.swing.JCheckBox jCheckBox_Silver;
    private javax.swing.JLabel jLabel_Item;
    private javax.swing.JLabel jLabel_Labour;
    private javax.swing.JLabel jLabel_Stamp;
    private javax.swing.JTextField jTextField_Item;
    private javax.swing.JTextField jTextField_Labour;
    private javax.swing.JTextField jTextField_Stamp;
    private org.jdesktop.swingx.JXLabel jXLabel2;
    // End of variables declaration//GEN-END:variables


		    
 public static String SetVal() {

        try {
            Class.forName("com.mysql.jdbc.Driver");

            Connection con = DriverManager.getConnection(
                    "jdbc:mysql://127.0.0.1:3306/work", "root", "root");

            Statement stmt = con.createStatement();
           
            String tmp = "INSERT INTO stocks (`Items`,  `Labour`,`Stamp`) "
                    + "VALUES (" + "'" + Item + "'" + "," + "'" + Labour_charge + "'" + "," + "'" + Stamp + "'"  +" )  ;";

            System.out.println("==>" + tmp);
                String ret="Failed";
            if( 0< stmt.executeUpdate(tmp))
            {
                    ret = "Success";
                    Item = "";
                    Labour_charge = "";
                    Stamp = "";
            }
            
            con.close();
            return  ret;

        } catch (Exception e) {
            System.out.println(e);
            return "Failed";
        }
    }
   

 private  void validateInput(String text, String pattern)
  {
//    Pattern r = Pattern.compile(pattern);
//    Matcher m = r.matcher(text);
//    if (!m.matches())
//    {
//      JOptionPane.showMessageDialog(NewJFrame73.this,"Error", "Validation", JOptionPane.WARNING_MESSAGE);
//      jTextField_Today_Gold_Rate.setText("");
//      jTextField_Today_Silver_Rate.setText("");
//    }
    
  }
 
}
